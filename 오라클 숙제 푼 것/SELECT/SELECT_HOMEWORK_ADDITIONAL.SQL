-- 1.
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS  주소지
FROM TB_STUDENT
ORDER BY 1;

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3.
SELECT STUDENT_NAME AS "학생 이름", STUDENT_NO AS 학번 ,STUDENT_ADDRESS AS  "거주지 주소"
FROM TB_STUDENT
WHERE NOT SUBSTR(STUDENT_NO,1,1) ='A' AND SUBSTR(STUDENT_ADDRESS,1,3) IN('강원도','경기도') 
ORDER BY 1;

-- 4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = 005
ORDER BY 1 DESC;

-- 5.
-- 점수가 같으면 낮은 학번순으로 정렬 
-- ORDER BY에 정렬을 여러개 할 수 있다.
SELECT STUDENT_NO, POINT
FROM TB_GRADE E
WHERE TERM_NO = 200402 AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM  TB_STUDENT S JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C JOIN TB_DEPARTMENT P ON C.DEPARTMENT_NO = P.DEPARTMENT_NO;

-- 8.
SELECT CLASS_NAME,PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR CP JOIN TB_CLASS C ON CP.CLASS_NO = C.CLASS_NO
            JOIN TB_PROFESSOR P ON CP.PROFESSOR_NO = P.PROFESSOR_NO;

-- 9.
SELECT CLASS_NAME,PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR CP JOIN TB_CLASS C ON CP.CLASS_NO = C.CLASS_NO
            JOIN TB_PROFESSOR P ON CP.PROFESSOR_NO = P.PROFESSOR_NO
            JOIN TB_DEPARTMENT D ON D.DEPARTMENT_NO = P.DEPARTMENT_NO
WHERE D.DEPARTMENT_NO BETWEEN 001 AND 021;

-- 10.
SELECT S.STUDENT_NO AS 학번, S.STUDENT_NAME AS 학생이름 , ROUND(AVG(G.POINT),1)
FROM TB_STUDENT S JOIN TB_DEPARTMENT D ON  S.DEPARTMENT_NO = D.DEPARTMENT_NO
                JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE S.DEPARTMENT_NO =059
GROUP BY S.STUDENT_NO,S.STUDENT_NAME
ORDER BY 1;

-- 11.
SELECT DEPARTMENT_NAME , STUDENT_NAME, PROFESSOR_NAME
FROM TB_DEPARTMENT D JOIN TB_STUDENT S ON D.DEPARTMENT_NO = S.DEPARTMENT_NO
                    JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
WHERE STUDENT_NO = 'A313047';

-- 12.
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT S JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
                JOIN TB_CLASS C ON G.CLASS_NO = C.CLASS_NO
WHERE CLASS_NAME = '인간관계론' AND TERM_NO BETWEEN 200701 AND 200709
ORDER BY 1;

-- 13.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
            JOIN TB_CLASS_PROFESSOR CP ON C.CLASS_NO = CP.CLASS_NO
WHERE (D.DEPARTMENT_NO  BETWEEN 56 AND 63 ) ;


-- 14.
SELECT STUDENT_NAME AS 학생이름, PROFESSOR_NAME AS 지도교수 
FROM TB_STUDENT S LEFT OUTER JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
                JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO ASC;
--JOIN에는 INNER JOIN,OUTTER JOIN이 있다.
--관계를 잘 생각해보자

-- 15.
SELECT S.STUDENT_NO AS 학번, S.STUDENT_NAME 이름 , D.DEPARTMENT_NAME "학과 이름", AVG(POINT) 평점
FROM TB_STUDENT S JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
                JOIN  TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE ABSENCE_YN ='N'
GROUP BY S.STUDENT_NO,S.STUDENT_NAME, D.DEPARTMENT_NAME
HAVING AVG(POINT)>=4.0;

-- 16.
SELECT C.CLASS_NO, C.CLASS_NAME , AVG(POINT)
FROM TB_CLASS C JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
                JOIN TB_GRADE G ON C.CLASS_NO = G.CLASS_NO 
WHERE D.DEPARTMENT_NAME = '환경조경학과'AND C.CLASS_NO NOT IN('C0737007','C0736707')
GROUP BY C.CLASS_NO, C.CLASS_NAME;

-- 17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE STUDENT_NAME = '최경희'

UNION

SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT 
WHERE DEPARTMENT_NO = 038;

-- 18.
SELECT STUDENT_NO, STUDENT_NAME
FROM(
    SELECT S.STUDENT_NO , S.STUDENT_NAME, AVG(G.POINT)
    FROM TB_STUDENT S JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
                    JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
    WHERE DEPARTMENT_NAME = '국어국문학과'
    GROUP BY S.STUDENT_NO , S.STUDENT_NAME
    ORDER BY 3 DESC
)
WHERE ROWNUM =1;

--HAVING MAX(SELECT AVG(POINT) FROM TB_GRADE WHERE STUDENT_NO=S.STUDENT_NO) ;
-- INLINEVIEW -> FROM안에 있는 컬럼명만 사용가능하다

-- 19.
-- AS 전공평점,DEPARTMENT_NAME AS "계열 학과명",
SELECT DEPARTMENT_NAME   
FROM TB_DEPARTMENT
WHERE CATEGORY = ALL(SELECT CATEGORY
                     FROM TB_DEPARTMENT
                     WHERE DEPARTMENT_NAME ='환경조경학과');
     


SELECT D.DEPARTMENT_NAME, ROUND(AVG(POINT),1)
FROM TB_GRADE G JOIN TB_STUDENT S ON G.STUDENT_NO = S.STUDENT_NO
                JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
                
--WHERE D.DEPARTMENT_NAME = ALL(SELECT DEPARTMENT_NAME   
--                              FROM TB_DEPARTMENT
--                              WHERE CATEGORY = ALL(SELECT CATEGORY
--                                                   FROM TB_DEPARTMENT
--                                                   WHERE DEPARTMENT_NAME ='환경조경학과'))
GROUP BY D.DEPARTMENT_NAME
-- 그룹함수의 조건은 HAVING
HAVING D.DEPARTMENT_NAME  IN (SELECT DEPARTMENT_NAME   
                              FROM TB_DEPARTMENT
                              WHERE CATEGORY = ALL(SELECT CATEGORY
                                                   FROM TB_DEPARTMENT
                                                   WHERE DEPARTMENT_NAME ='환경조경학과'));           



